basePath: /
definitions:
  domain.Card:
    properties:
      body:
        type: string
      description:
        type: string
      id:
        type: integer
      price:
        type: number
      thumbnail:
        type: string
      title:
        type: string
    type: object
  domain.Profile:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      middleName:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
  handler.CreateCardRequest:
    properties:
      card:
        $ref: '#/definitions/domain.Card'
    type: object
  handler.CreateCardResponse:
    properties:
      cardId:
        type: integer
    type: object
  handler.ErrorResponse:
    properties:
      code:
        type: integer
      msg:
        type: string
    type: object
  handler.GetAllCardsResponse:
    properties:
      cards:
        items:
          $ref: '#/definitions/domain.Card'
        type: array
    type: object
  handler.GetBalanceResponse:
    properties:
      balanceMatic:
        type: number
      balanceRubles:
        type: number
    type: object
  handler.GetProfileResponse:
    properties:
      profile:
        $ref: '#/definitions/domain.Profile'
    type: object
  handler.SignInRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handler.SignInResponse:
    properties:
      accessToken:
        type: string
    type: object
  handler.SignUpRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handler.TransferMaticRequest:
    properties:
      amount:
        type: number
      receiverId:
        type: integer
    type: object
  handler.TransferRubleRequest:
    properties:
      amount:
        type: number
      receiverId:
        type: integer
    type: object
  handler.UpdateScoreRequest:
    properties:
      score:
        type: integer
    type: object
host: gaz.onixx.org
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for VTB Hack
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: VTB Hack API
  version: "1.0"
paths:
  /api/balance:
    get:
      consumes:
      - application/json
      description: get balance of the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.GetBalanceResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Balance
      tags:
      - finance
  /api/cards:
    get:
      consumes:
      - application/json
      description: get all cards
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.GetAllCardsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get All Cards
      tags:
      - cards
    post:
      consumes:
      - application/json
      description: create card
      parameters:
      - description: card
        in: body
        name: card
        required: true
        schema:
          $ref: '#/definitions/handler.CreateCardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CreateCardResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Card
      tags:
      - cards
  /api/cards/{card_id}:
    delete:
      consumes:
      - application/json
      description: delete card
      parameters:
      - description: Card Id
        in: path
        name: card_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Card
      tags:
      - cards
  /api/profile:
    get:
      consumes:
      - application/json
      description: get profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.GetProfileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Profile
      tags:
      - profile
  /api/score:
    put:
      consumes:
      - application/json
      description: update score
      parameters:
      - description: updateScore
        in: body
        name: updateScore
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateScoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Score
      tags:
      - scores
  /api/transfer/matic:
    post:
      consumes:
      - application/json
      description: transfer matic from current user to another
      parameters:
      - description: transferMatic
        in: body
        name: transferMatic
        required: true
        schema:
          $ref: '#/definitions/handler.TransferMaticRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Transfer Matic
      tags:
      - finance
  /api/transfer/ruble:
    post:
      consumes:
      - application/json
      description: transfer ruble from current user to another
      parameters:
      - description: transferRuble
        in: body
        name: transferRuble
        required: true
        schema:
          $ref: '#/definitions/handler.TransferRubleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Transfer Ruble
      tags:
      - finance
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: authenticates user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SignInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Authentication of a user
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: authorizes user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Authorization of a user
      tags:
      - auth
schemes:
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
